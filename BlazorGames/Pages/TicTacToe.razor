@page "/tictactoe"
@using BlazorGames.Models.TicTacToe;
@using BlazorGames.Pages.Partials; 
@inject IJSRuntime _jsRuntime; 

<PageTitle Title="Tic Tac Toe" />

@code {
    GameBoard board = new GameBoard();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await _jsRuntime.InvokeVoidAsync("Prism.highlightAll");
    }
}


@if (!board.GameComplete)
{
    <h2>@board.CurrentTurn's Turn!</h2>
}
else
{
    <h2>@board.GetGameCompleteMessage() <button class="btn btn-success" @onclick="@(() => board.Reset())">Reset</button></h2>
}

<div class="tictactoe-board">
    @for (int i = 0; i < 3; i++)
    {
        <div class="tictacttoe-column">
            @for (int j = 0; j < 3; j++)
            {
                int x = i;
                int y = j;
                <div class="tictactoe-gamepiece
                         tictactoe-@board.Board[i,j].Style.ToString().ToLower()" @onclick="@(() => board.PieceClicked(x,y))"
                     style="@(board.IsGamePieceAWinningPiece(i, j)? "opacity: 0.6" : "")"></div>
            }
        </div>
    }
</div>

<hr />

<TicTacToeHowToMake/>